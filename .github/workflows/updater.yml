# ==============================================================================
# CEPHANELİK UPDATER - v8 - TEK İŞLEYİCİLİ NİHAİ WORKFLOW
# ==============================================================================
# AÇIKLAMA: Bu versiyon, `mis` ve `telegram_forwarder` betiklerini tek bir
# Python betiğinde (`module_handler.py`) birleştirir. Bu sayede sistem
# maksimum basitliğe ve sağlamlığa ulaşır. Arşiv kanalı ve arşiv botu
# token'ı tamamen ortadan kaldırılmıştır.

name: Dosya Güncelleme Otomasyonu (Nihai Sürüm)

on:
  workflow_dispatch:
  schedule:
    - cron: '0 5 * * *'

jobs:
  update-files:
    environment: production
    runs-on: ubuntu-latest
    
    permissions:
      contents: write

    steps:
      # 1. Adım: Depoyu klonla
      - name: Depoyu Klonla
        uses: actions/checkout@v4
        with:
          repository: 'MematiBas42/Cephanelik_Updater'
          token: ${{ secrets.GITHUB_TOKEN }}
      
      # 2. Adım: Python ve Gerekli Kütüphaneleri Kur
      - name: Python Ortamını Kur ve Kütüphaneleri Yükle
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - run: pip install telethon requests

      # 3. Adım: İŞLEYİCİ (BİRLEŞTİRİLMİŞ)
      # Bu adım hem dosyaları toplar hem de indirir.
      - name: Modülleri Kontrol Et ve İndir (Birleşik İşleyici)
        run: python module_handler.py
        env:
          TELEGRAM_API_ID: ${{ secrets.TELEGRAM_API_ID }}
          TELEGRAM_API_HASH: ${{ secrets.TELEGRAM_API_HASH }}
          TELEGRAM_SESSION_STRING: ${{ secrets.TELEGRAM_SESSION_STRING }}
          GIT_API_TOKEN: ${{ secrets.GIT_API_TOKEN }}

      # 4. Adım: YAYINCI - Dosyaları Telethon ile yayınla
      - name: Dosyaları Telegram Kanalında Yayınla (Telethon Yayıncı)
        run: python telethon_publisher.py
        env:
          TELEGRAM_API_ID: ${{ secrets.TELEGRAM_API_ID }}
          TELEGRAM_API_HASH: ${{ secrets.TELEGRAM_API_HASH }}
          TELEGRAM_SESSION_STRING: ${{ secrets.TELEGRAM_SESSION_STRING }}
          MANUAL_RUN: ${{ github.event_name == 'workflow_dispatch' }}

      # 5. Adım: Durum dosyalarını depoya kaydet
      - name: Durum Dosyalarını Depoya Kaydet
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          
          # Depoya kaydetmeden önce cache dizininin varlığını kontrol et
          if [ -d ".cache/ksu-manager" ]; then
            if [[ -n $(git status --porcelain) ]]; then
              echo "Değişiklikler bulundu, depoya kaydediliyor."
              # ÖNEMLİ: manifest.json'ı da depoya ekliyoruz
              git add last_run.txt telegram_durum.txt .cache/ksu-manager/manifest.json
              git commit -m "ci: Otomasyon durum dosyalarını güncelle"
              git pull --rebase
              git push
            else
              echo "Yeni değişiklik bulunamadı."
            fi
          else
            echo "Cache dizini bulunamadığı için depoya kaydedilecek bir değişiklik yok."
          fi

