# ==============================================================================
# CEPHANELİK UPDATER - v7.0 - TEK İŞLEYİCİLİ NİHAİ WORKFLOW
# ==============================================================================
# AÇIKLAMA: Bu versiyon, projenin tüm mantığını tek bir Python betiğinde
# (`main_automation.py`) çalıştırır. Maksimum sadelik, okunabilirlik ve
# sağlamlık sunar.

name: CPUpdater Otomasyon
on:
  workflow_dispatch:
  schedule:
    - cron: '0 * * * *'

jobs:
  update-and-publish:
    environment: production
    runs-on: ubuntu-latest

    permissions:
      contents: write

    steps:
      - name: Eski çalıştırmaları temizle
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh run list -L400 --json databaseId -q '.[].databaseId' | tail -n+5 | xargs -IID gh api "repos/$GITHUB_REPOSITORY/actions/runs/ID" -X DELETE || :

      - name: Depoyu Klonla
        uses: actions/checkout@v4
        with:
          repository: 'MematiBas42/Cephanelik_Updater'
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: Python Ortamını Kur ve Kütüphaneleri Yükle
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - run: pip install telethon requests

      - name: Modülleri İndir ve Telegram'da Yayınla
        run: python main_automation.py
        env:
          TELEGRAM_API_ID: ${{ secrets.TELEGRAM_API_ID }}
          TELEGRAM_API_HASH: ${{ secrets.TELEGRAM_API_HASH }}
          TELEGRAM_SESSION_STRING: ${{ secrets.TELEGRAM_SESSION_STRING }}
          GIT_API_TOKEN: ${{ secrets.GIT_API_TOKEN }}

      - name: Durum Dosyalarını Depoya Kaydet (state branch)
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'

          git stash --include-untracked

          git fetch origin

          if git show-ref --quiet refs/remotes/origin/state; then
            echo "[INFO] 'state' branch bulundu, geçiş yapılıyor."
            git checkout state || git checkout -b state origin/state
          else
            echo "[INFO] 'state' branch bulunamadı, yeni oluşturuluyor."
            git checkout --orphan state
          fi

          git reset --hard
          git clean -fdx

          git stash pop || true

          if [[ -d state && -n $(git status --porcelain state) ]]; then
            git add state/
            git commit -m "[CI]: Durum dosyasını yenile"
          else
            echo "[INFO] Yeni değişiklik bulunamadı, yine de branch güncellenecek."
            git commit --allow-empty -m "[CI]: Durum dosyalarını yenile (değişiklik yok)"
          fi

          git push -f origin state
