# ==============================================================================
# CEPHANELİK UPDATER - FİNAL GITHUB ACTIONS WORKFLOW'U
# ==============================================================================
# Bu workflow, projenin tüm adımlarını (Topla, İşle, Yayınla) tam otomatik
# olarak çalıştırır. Gerekli tüm izinler ve ortam değişkenleri tanımlanmıştır.

name: Dosya Güncelleme Otomasyonu

on:
  # Bu satır, GitHub arayüzünden "Run workflow" butonu ile manuel çalıştırmayı sağlar.
  workflow_dispatch:

  # Bu bölüm, betiğin belirli zamanlarda otomatik çalışmasını sağlar.
  # Bu ayar, betiği her gün UTC saatiyle 05:00'da çalıştırır (Türkiye saatiyle yaklaşık 08:00).
  schedule:
    - cron: '0 5 * * *'

jobs:
  update-files:
    runs-on: ubuntu-latest
    
    # --- ÖNEMLİ DÜZELTME ---
    # Bu blok, workflow'un depoya geri yazma (git push) yapabilmesi için
    # gerekli olan izni açıkça tanımlar. İzin hatalarını önler.
    permissions:
      contents: write

    steps:
      # 1. Adım: Proje dosyalarını sanal makineye indirir.
      - name: Depoyu Klonla
        uses: actions/checkout@v4
        with:
          repository: 'MematiBas42/Cephanelik_Updater'
          # GITHUB_TOKEN, Actions tarafından otomatik olarak sağlanır.
          token: ${{ secrets.GITHUB_TOKEN }}

      # 2. Adım: Python ortamını ve gerekli kütüphaneyi kurar.
      - name: Python Ortamını Kur ve Telethon Yükle
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - run: pip install telethon

      # 3. Adım: TOPLAYICI - Kaynak kanalları tarar ve dosyaları arşive iletir.
      # Bu adım, kişisel Telegram hesabınız gibi çalışır.
      - name: Telegram Dosyalarını Arşivle (Toplayıcı)
        run: python telegram_forwarder.py
        env:
          # my.telegram.org adresinden alınan API kimlik bilgileri
          TELEGRAM_API_ID: ${{ secrets.TELEGRAM_API_ID }}
          TELEGRAM_API_HASH: ${{ secrets.TELEGRAM_API_HASH }}
          # generate_session.py ile oluşturulan ve kullanıcı hesabını temsil eden anahtar
          TELEGRAM_SESSION_STRING: ${{ secrets.TELEGRAM_SESSION_STRING }}
          # Dosyaların taranacağı kaynak kanallar (JSON formatında, örn: '["kanal1", "kanal2"]')
          TELEGRAM_SOURCE_CHATS: ${{ secrets.TELEGRAM_SOURCE_CHATS }}
          # Dosyaların yönlendirileceği Arşiv Kanalı'nın sayısal ID'si (-100 ile başlamalı)
          TELEGRAM_ARCHIVE_CHANNEL: ${{ secrets.TELEGRAM_ARCHIVE_CHANNEL }}

      # 4. Adım: mis betiği için gerekli olan jq paketini kurar ve yapılandırmayı hazırlar.
      - name: Gerekli Paketleri Yükle ve Yapılandırmayı Kopyala
        run: |
          sudo apt-get update && sudo apt-get install -y jq
          mkdir -p $HOME/.config/ksu-manager
          cp ./modules.json $HOME/.config/ksu-manager/modules.json

      # 5. Adım: İŞLEYİCİ - Modülleri kontrol eder, güncel olanları indirir.
      # Bu adım, Arşiv Botu (KsuModulTakipBot) gibi çalışır.
      - name: Modülleri Kontrol Et ve İndir (İşleyici)
        run: bash ./mis sync
        env:
          # Arşiv Kanalı'nı okuyacak olan botun (KsuModulTakipBot) token'ı
          BOT_TOKEN_FOR_ARCHIVE: ${{ secrets.BOT_TOKEN_FOR_ARCHIVE }}
          # Arşiv Kanalı'nın sayısal ID'si (-100 ile başlamalı)
          TELEGRAM_ARCHIVE_CHANNEL: ${{ secrets.TELEGRAM_ARCHIVE_CHANNEL }}
          # GitHub API limitlerine takılmamak için kişisel erişim token'ı
          GIT_API_TOKEN: ${{ secrets.GIT_API_TOKEN }}

      # 6. Adım: YAYINCI - İndirilen yeni dosyaları ana kanala yükler.
      # Bu adım, Yayıncı Bot (CpUpdater_bot) gibi çalışır.
      - name: Dosyaları Telegram Kanalında Yayınla (Yayıncı)
        run: bash ./telegram_guncelle.sh
        env:
          # Yayın Kanalı'na yazacak olan botun (CpUpdater_bot) token'ı
          BOT_TOKEN_FOR_PUBLISH: ${{ secrets.BOT_TOKEN_FOR_PUBLISH }}
          # Yayın Kanalı'nın sayısal ID'si (-100 ile başlamalı)
          PUBLISH_CHANNEL_ID: ${{ secrets.PUBLISH_CHANNEL_ID }}
          # Betiğin manuel mi yoksa zamanlanmış mı çalıştığını belirler
          MANUAL_RUN: ${{ github.event_name == 'workflow_dispatch' }}

      # 7. Adım: Ot
